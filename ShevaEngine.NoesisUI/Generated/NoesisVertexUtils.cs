// <auto-generated/>
using Microsoft.Xna.Framework.Graphics;
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Noesis.MonoGame.Generated;

internal class NoesisVertexUtils
{
    private static List<Action<GraphicsDevice, byte[], short[], Noesis.Batch>> _drawActions = new(new Action<GraphicsDevice, byte[], short[], Noesis.Batch>[]
    {
        //RGBA
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPos>(device, verticesData, indicesData, batch),
        //Mask
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPos>(device, verticesData, indicesData, batch),
        //Clear
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPos>(device, verticesData, indicesData, batch),
        //Path_Solid
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosColor>(device, verticesData, indicesData, batch),
        //Path_Linear
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0>(device, verticesData, indicesData, batch),
        //Path_Radial
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0>(device, verticesData, indicesData, batch),
        //Path_Pattern
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0>(device, verticesData, indicesData, batch),
        //Path_Pattern_Clamp
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Rect>(device, verticesData, indicesData, batch),
        //Path_Pattern_Repeat
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0RectTile>(device, verticesData, indicesData, batch),
        //Path_Pattern_MirrorU
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0RectTile>(device, verticesData, indicesData, batch),
        //Path_Pattern_MirrorV
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0RectTile>(device, verticesData, indicesData, batch),
        //Path_Pattern_Mirror
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0RectTile>(device, verticesData, indicesData, batch),
        //Path_AA_Solid
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosColorCoverage>(device, verticesData, indicesData, batch),
        //Path_AA_Linear
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Coverage>(device, verticesData, indicesData, batch),
        //Path_AA_Radial
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Coverage>(device, verticesData, indicesData, batch),
        //Path_AA_Pattern
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Coverage>(device, verticesData, indicesData, batch),
        //Path_AA_Pattern_Clamp
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0CoverageRect>(device, verticesData, indicesData, batch),
        //Path_AA_Pattern_Repeat
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0CoverageRectTile>(device, verticesData, indicesData, batch),
        //Path_AA_Pattern_MirrorU
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0CoverageRectTile>(device, verticesData, indicesData, batch),
        //Path_AA_Pattern_MirrorV
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0CoverageRectTile>(device, verticesData, indicesData, batch),
        //Path_AA_Pattern_Mirror
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0CoverageRectTile>(device, verticesData, indicesData, batch),
        //SDF_Solid
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosColorTex1>(device, verticesData, indicesData, batch),
        //SDF_Linear
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //SDF_Radial
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //SDF_Pattern
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //SDF_Pattern_Clamp
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1Rect>(device, verticesData, indicesData, batch),
        //SDF_Pattern_Repeat
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //SDF_Pattern_MirrorU
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //SDF_Pattern_MirrorV
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //SDF_Pattern_Mirror
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //SDF_LCD_Solid
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosColorTex1>(device, verticesData, indicesData, batch),
        //SDF_LCD_Linear
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //SDF_LCD_Radial
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //SDF_LCD_Pattern
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //SDF_LCD_Pattern_Clamp
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1Rect>(device, verticesData, indicesData, batch),
        //SDF_LCD_Pattern_Repeat
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //SDF_LCD_Pattern_MirrorU
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //SDF_LCD_Pattern_MirrorV
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //SDF_LCD_Pattern_Mirror
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //Opacity_Solid
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosColorTex1>(device, verticesData, indicesData, batch),
        //Opacity_Linear
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //Opacity_Radial
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //Opacity_Pattern
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //Opacity_Pattern_Clamp
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1Rect>(device, verticesData, indicesData, batch),
        //Opacity_Pattern_Repeat
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //Opacity_Pattern_MirrorU
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //Opacity_Pattern_MirrorV
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //Opacity_Pattern_Mirror
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1RectTile>(device, verticesData, indicesData, batch),
        //Upsample
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosColorTex0Tex1>(device, verticesData, indicesData, batch),
        //Downsample
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosTex0Tex1>(device, verticesData, indicesData, batch),
        //Shadow
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosColorTex1Rect>(device, verticesData, indicesData, batch),
        //Blur
        (device, verticesData, indicesData, batch) => DrawUserIndexedPrimitives<NoesisVertexPosColorTex1>(device, verticesData, indicesData, batch),
    });

    public static void DrawUserIndexedPrimitives(GraphicsDevice device, byte[] verticesData, short[] indicesData, in Noesis.Batch batch)
    {
        _drawActions[batch.Shader.Index].Invoke(device, verticesData, indicesData, batch);
    }

    public static void DrawUserIndexedPrimitives<T>(GraphicsDevice device, byte[] verticesData, short[] indicesData, in Noesis.Batch batch) where T : struct, IVertexType
    {
        device.DrawUserIndexedPrimitives(
            PrimitiveType.TriangleList,
            MemoryMarshal.Cast<byte, T>(verticesData.AsSpan((int)batch.VertexOffset)).ToArray(),
            0,
            (int)batch.NumVertices,
            indicesData,
            (int)batch.StartIndex,
            (int)batch.NumIndices / 3);
    }
}
