// <auto-generated/>
using System;
using System.Diagnostics;
ï»¿using System.Runtime.InteropServices;

namespace Noesis.MonoGame.Generated
{
    [StructLayout(LayoutKind.Sequential, Pack = 2)]
    public struct NoesisVertexPosTex0CoverageRectTile : Microsoft.Xna.Framework.Graphics.IVertexType
    {
        private static readonly Microsoft.Xna.Framework.Graphics.VertexDeclaration _vertexDeclaration;
        Microsoft.Xna.Framework.Graphics.VertexDeclaration  Microsoft.Xna.Framework.Graphics.IVertexType.VertexDeclaration => _vertexDeclaration;        

		public Microsoft.Xna.Framework.Vector2 Pos;
		public Microsoft.Xna.Framework.Vector2 Tex0;
		public System.Single Coverage;
		public Microsoft.Xna.Framework.Graphics.PackedVector.NormalizedShort4 Rect;
		public Microsoft.Xna.Framework.Vector4 Tile;

        static NoesisVertexPosTex0CoverageRectTile()
		{
			Microsoft.Xna.Framework.Graphics.VertexElement[] elements = new Microsoft.Xna.Framework.Graphics.VertexElement[] 
            { 
				new (0, Microsoft.Xna.Framework.Graphics.VertexElementFormat.Vector2, Microsoft.Xna.Framework.Graphics.VertexElementUsage.Position, 0),
				new (8, Microsoft.Xna.Framework.Graphics.VertexElementFormat.Vector2, Microsoft.Xna.Framework.Graphics.VertexElementUsage.TextureCoordinate, 0),
				new (16, Microsoft.Xna.Framework.Graphics.VertexElementFormat.Single, Microsoft.Xna.Framework.Graphics.VertexElementUsage.Normal, 0),
				new (20, Microsoft.Xna.Framework.Graphics.VertexElementFormat.NormalizedShort4, Microsoft.Xna.Framework.Graphics.VertexElementUsage.Binormal, 0),
				new (28, Microsoft.Xna.Framework.Graphics.VertexElementFormat.Vector4, Microsoft.Xna.Framework.Graphics.VertexElementUsage.Tangent, 0),

            };			
			_vertexDeclaration = new Microsoft.Xna.Framework.Graphics.VertexDeclaration(elements);

            Debug.Assert(_vertexDeclaration.VertexStride == Marshal.SizeOf<NoesisVertexPosTex0CoverageRectTile>());
		}
    }
}
